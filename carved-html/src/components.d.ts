/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface CarvedButton {
    'text': string;
  }
  interface CarvedButtonAttributes extends StencilHTMLAttributes {
    'text'?: string;
  }

  interface CarvedInput {
    'label': string;
    'placeholder': string;
    'type': string;
  }
  interface CarvedInputAttributes extends StencilHTMLAttributes {
    'label'?: string;
    'placeholder'?: string;
    'type'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'CarvedButton': Components.CarvedButton;
    'CarvedInput': Components.CarvedInput;
  }

  interface StencilIntrinsicElements {
    'carved-button': Components.CarvedButtonAttributes;
    'carved-input': Components.CarvedInputAttributes;
  }


  interface HTMLCarvedButtonElement extends Components.CarvedButton, HTMLStencilElement {}
  var HTMLCarvedButtonElement: {
    prototype: HTMLCarvedButtonElement;
    new (): HTMLCarvedButtonElement;
  };

  interface HTMLCarvedInputElement extends Components.CarvedInput, HTMLStencilElement {}
  var HTMLCarvedInputElement: {
    prototype: HTMLCarvedInputElement;
    new (): HTMLCarvedInputElement;
  };

  interface HTMLElementTagNameMap {
    'carved-button': HTMLCarvedButtonElement
    'carved-input': HTMLCarvedInputElement
  }

  interface ElementTagNameMap {
    'carved-button': HTMLCarvedButtonElement;
    'carved-input': HTMLCarvedInputElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
